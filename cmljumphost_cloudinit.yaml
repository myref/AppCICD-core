#cloud-config
hostname: cmljumphost
manage_etc_hosts: True
system_info:
  default_user:
    name: ubuntu
password: cisco
chpasswd: { expire: False }
ssh_pwauth: True
write_files:
  - path: /etc/netplan/50-cloud-init.yaml
    owner: root:root
    permissions: '0600'
    content: |-
      network:
        version: 2
        renderer: networkd
        ethernets:
          ens2:
            dhcp4: no
            addresses:
              - 192.168.255.250/24
            routes:
            - to: 0.0.0.0/0
              via: 192.168.255.1
            nameservers:
              addresses: [8.8.8.8]
              
  - path: /etc/docker/deamon.json
    owner: root:root
    permissions: '0644'
    content: |-
      {
          "insecure-registries" : ["nexus.tooling.provider.test:8181"],
          "registry-mirrors": ["https://nexus.tooling.provider.test:8181"]
      }
      
  - path: /etc/ssh/ssh_config
    owner: root:root
    permissions: '0755'
    content: |-
      Host *
          PasswordAuthentication yes
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null
          HostkeyAlgorithms ssh-dss,ssh-rsa
          KexAlgorithms +diffie-hellman-group14-sha1

  - path: /home/ubuntu/.ansible.cfg
    permissions: '0755'
    content: |-
      [defaults]
      host_key_checking = False
      nocows = True
      interpreter_python = auto_silent
      display_skipped_hosts = no

      # Installs collections into /home/ubuntu/.ansible/collections/namespace/collection_name
      collections_paths = /home/ubuntu/.ansible/collections

      # Installs roles into /home/ubuntu/.ansible/roles/namespace.rolename
      roles_path = /home/ubuntu/.ansible/roles

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - rsyslog
  - openjdk-11-jdk
  - git
  - libxml2-dev
  - libxslt-dev
  - sshpass
  - python-is-python3
  - python3-pip
  - docker.io
  - curl
  - gpg

ntp: 
  enabled: true

runcmd:
  - netplan apply
  - ssh-keygen -t rsa -N "" -f /home/ubuntu/.ssh/id_rsa -C netcicd-pipeline@infraautomator.provider.test  >>/home/ubuntu/install-log.txt
  - git config --global http.sslVerify false
  - echo " Add Gitea to /etc/hosts" >>/home/ubuntu/install-log.txt
  - echo "gitea_ip   gitea.tooling.provider.test" >> /etc/hosts
  - echo " Add Jenkins to /etc/hosts" >>/home/ubuntu/install-log.txt
  - echo "jenkins_ip   jenkins.tooling.provider.test" >> /etc/hosts
  - echo " Add Nexus to /etc/hosts" >>/home/ubuntu/install-log.txt
  - echo "nexus_ip   nexus.tooling.provider.test" >> /etc/hosts
  - echo "Set Docker repo to proxy host to enable curated packages" >>/home/ubuntu/install-log.txt
  - echo "routes installed" >>/home/ubuntu/install-log.txt
  - ip r  >>/home/ubuntu/install-log.txt
  - ssh-keygen -t rsa -N "" -f /home/ubuntu/.ssh/id_rsa -C netcicd-pipeline@infraautomator.provider.test  >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install cisco.ios -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install cisco.iosxr -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install cisco.nxos -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install ansible.posix -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install netapp.ontap -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - ansible-galaxy collection install infoblox.nios_modules -p /home/ubuntu/.ansible/collections/ >>/home/ubuntu/install-log.txt
  - chown -R ubuntu:ubuntu /home/ubuntu/.ansible >>/home/ubuntu/install-log.txt
#  - git clone https://github.com/DevoteamNL/aqua-build-image.git /home/ubuntu/aqua  >>/home/ubuntu/install-log.txt
#  - pip install --upgrade -r /home/ubuntu/aqua/requirements.txt
  - pip install --upgrade paramiko ncclient cffi cmlutils >>/home/ubuntu/install-log.txt
  - pip install --upgrade ansible >>/home/ubuntu/install-log.txt
  - pip install --upgrade pyats[full] >>/home/ubuntu/install-log.txt
  - pip install --upgrade robotframework-seleniumlibrary >>/home/ubuntu/install-log.txt
  - pip install --upgrade robotframework-sshlibrary >>/home/ubuntu/install-log.txt
  - groupadd docker >>/home/ubuntu/install-log.txt
  - usermod -aG docker ubuntu >>/home/ubuntu/install-log.txt
  - chown ubuntu:ubuntu -R /home/ubuntu >>/home/ubuntu/install-log.txt
  - wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg >>/home/ubuntu/install-log.txt
  - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint >>/home/ubuntu/install-log.txt
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list >>/home/ubuntu/install-log.txt
  - apt update
  - apt install terraform
#  - rm -rf /var/lib/cloud/instances
  - docker run -d --name seleniumffhost selenium/standalone-firefox
  - docker run -d --name seleniumgchost selenium/standalone-chrome


power_state:
  mode: reboot
  message: Rebooting to make all changes active
  timeout: 5
  condition: True